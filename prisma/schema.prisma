// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  title     String    @db.VarChar(100)
  metaTitle String    @db.VarChar(100)
  slug      String    @db.VarChar(100)
  content   String    @db.VarChar(100)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @db.Timestamp(0)
}

model User {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  firstName   String    @db.VarChar(100)
  middleName  String    @db.VarChar(100)
  lastName    String    @db.VarChar(100)
  mobile      String    @unique @db.VarChar(100)
  email       String    @unique @db.VarChar(100)
  admin       Int?      @db.TinyInt
  password    String    @db.VarChar(100)
  registrenAt DateTime? @db.Timestamp(0)
  lastLogin   DateTime? @db.Timestamp(0)
  createdAt   DateTime  @default(now()) @db.Timestamp(0)
  updatedAt   DateTime? @db.Timestamp(0)
  carts       Cart[]
  orders      Order[]
  products    Product[]
}

model Cart {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  title      String    @db.VarChar(100)
  sessionId  String    @db.VarChar(100)
  token      String    @db.VarChar(100)
  status     String    @db.VarChar(100)
  firstName  String    @db.VarChar(100)
  middleName String    @db.VarChar(100)
  lastName   String    @db.VarChar(100)
  mobile     String    @db.VarChar(100)
  email      String    @db.VarChar(100)
  city       String    @db.VarChar(100)
  country    String    @db.VarChar(100)
  createdAt  DateTime  @default(now()) @db.Timestamp(0)
  updatedAt  DateTime? @db.Timestamp(0)
  User       User?     @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId     Int?      @db.UnsignedInt
}

model Order {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  title        String    @db.VarChar(100)
  token        String    @db.VarChar(100)
  subTotal     Int
  itemDiscount Int
  tax          Int
  total        Int
  discount     Int
  grandTotal   Int
  firstName    String    @db.VarChar(100)
  middleName   String    @db.VarChar(100)
  lastName     String    @db.VarChar(100)
  mobile       String    @db.VarChar(100)
  email        String    @db.VarChar(100)
  city         String    @db.VarChar(100)
  country      String    @db.VarChar(100)
  createdAt    DateTime  @default(now()) @db.Timestamp(0)
  updatedAt    DateTime? @db.Timestamp(0)
  User         User?     @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId       Int?      @db.UnsignedInt
}

model Product {
  id            Int              @id @default(autoincrement()) @db.UnsignedInt
  firstName     String           @db.VarChar(100)
  metaTitle     String           @db.VarChar(100)
  slug          String           @db.VarChar(100)
  summary       String           @db.VarChar(100)
  price         Int
  discount      Int
  publishedAt   DateTime?        @db.Timestamp(0)
  startsAt      DateTime?        @db.Timestamp(0)
  endsAt        DateTime?        @db.Timestamp(0)
  createdAt     DateTime         @default(now()) @db.Timestamp(0)
  updatedAt     DateTime?        @db.Timestamp(0)
  User          User?            @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  userId        Int?             @db.UnsignedInt
  productReview Product_Review[]
  productMeta   Product_Meta[]
}

model Product_Meta {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  key       String    @db.VarChar(100)
  content   String    @db.VarChar(100)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @db.Timestamp(0)
  Product   Product?  @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  productId Int?      @db.UnsignedInt
}

model Product_Review {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  title     String    @db.VarChar(100)
  rating    String    @db.VarChar(100)
  content   String    @db.VarChar(100)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @db.Timestamp(0)
  Product   Product?  @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  productId Int?      @db.UnsignedInt
}
